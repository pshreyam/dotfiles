# Manage dotfiles
function dotfiles() {
    /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
}

# Clone remote repo inside the 'all' repos directory
function clone() {
    dir_name=$(basename $1 .git)
    git clone $1 ~/Code/repos/all/$dir_name
}

# Change directory into the selected active repository
function cr() {
    reply=$(echo "$(/bin/ls -1 ~/Code/repos/active)" | fzf --border=rounded --height=50% --layout=reverse --header="Choose Repository To cd Into" --header-first --prompt="› " --pointer="➜")
    if [[ -z $reply ]];then
        echo "No repo selected!"
    else
        cd ~/Code/repos/active/$reply
    fi
}

# Add repo to active repos
function mar() {
    reply=$(echo "$(/bin/ls -1 ~/Code/repos/all)" | fzf --border=rounded --height=50% --layout=reverse --header="Choose Repository To Make Active" --header-first --prompt="› " --pointer="➜")
    if [[ -z $reply ]];then
        echo "No repo selected!"
    else
        ln -s ~/Code/repos/all/$reply ~/Code/repos/active/$reply
        echo "Successfully added '$reply' to active repos!"
    fi
}

# Remove repo from active repos
function rfar() {
    reply=$(echo "$(/bin/ls -1 ~/Code/repos/active)" | fzf --border=rounded --height=50% --layout=reverse --header="Choose Repository To Remove From Active" --header-first --prompt="› " --pointer="➜")
    if [[ -z $reply ]];then
        echo "No repo selected!"
    else
        rm ~/Code/repos/active/$reply
        echo "Successfully removed '$reply' from active repos!"
    fi
}
