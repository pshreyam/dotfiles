# Get coloured output
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias diff='diff --color=auto'
    alias ip='ip --color=auto'
fi

alias history="history 0" # force zsh to show the complete history
alias ll='ls -alF'
alias la='ls -a'

# Python aliases
alias vc='python3 -m venv venv'
alias va='source ./venv/bin/activate'
alias vd='deactivate'
alias uppip='pip3 install --upgrade pip'
alias vca='vc && va && uppip'

# Interactive command aliases
alias mv='mv -i'
alias cp='cp -i'
alias rm='rm -i'

# Config files aliases
alias cb="$EDITOR ~/.config/bspwm/bspwmrc"
alias cs="$EDITOR ~/.config/sxhkd/sxhkdrc"
alias cpol="$EDITOR ~/.config/polybar/config.ini"
alias cdun="$EDITOR ~/.config/dunst/dunstrc"
alias cpic="$EDITOR ~/.config/picom/picom.conf"
alias crof="$EDITOR ~/.config/rofi/config.rasi"
alias czat="$EDITOR ~/.config/zathura/zathurarc"
alias cnvi="$EDITOR ~/.config/nvim/init.lua"
alias cali="$EDITOR ~/.aliases"
alias cfunc="$EDITOR ~/.functions"
alias cz="$EDITOR ~/.zshrc"
alias calac="$EDITOR ~/.config/alacritty/alacritty.yml"
alias bm="$EDITOR ~/.scripts/bookmarks/bookmarks.json"

# Aliases
alias vi=$EDITOR
alias nnn='/usr/bin/nnn -de'
alias trash='send2trash'

# Directory navigation (go to directory) aliases
alias gg='cd ~'
alias gdc='cd ~/Documents'
alias gdn='cd ~/Downloads'
alias gco="cd $CODE_DIR"
alias gr="cd $CODE_DIR/repos"

# Django aliases
alias rs='python3 manage.py runserver'
alias mi='python3 manage.py migrate'
alias mm='python3 manage.py makemigrations'
alias csu='python3 manage.py createsuperuser'

# Replacement program aliases
alias ls='exa --icons --group-directories-first'
alias tree='exa --tree --icons'
alias cat='bat -p'
alias docker='podman'

# Source env from shell script
alias source_env='source ~/Work/env.sh'

# Manage dotfiles
function dotfiles() {
    /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
}

# Change directory into the selected active repository
function cr() {
    reply=$(echo "$(/bin/ls -1 ~/Code/repos)" | fzf --border=rounded --height=50% --layout=reverse --header="Choose Repository To cd Into" --header-first --prompt="› " --pointer="➜")
    if [[ -z $reply ]];then
        echo "No repo selected!"
    else
        cd ~/Code/repos/$reply
    fi
}

# Message to a particular webhook
function message-webhook() {
    message="$@"
    curl -X POST -H 'Content-type: application/json' -d "{\"content\": \"$message\", \"embeds\": null, \"attachments\": []}" $WEBHOOK_URL
}
