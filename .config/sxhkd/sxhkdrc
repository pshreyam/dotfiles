#
# wm independent hotkeys
#

# terminal emulator
super + Return
    terminator

# run google
super + shift + Return
    surf www.google.com

# open webbrowser
super + v
    firefox

# open filemanager
super + shift + f
    thunar

# show shortcuts
super + alt + s
    ~/.scripts/shortcuts.sh

# restore original window gap
super + shift + grave
    bspc config -d focused window_gap 4

# increase window gap
super + equal
    [[ $(bspc config -d focused window_gap) -le 128 ]] && \
    bspc config -d focused window_gap $(($(bspc config -d focused window_gap)+10))

# decrease window gap
super + minus
    [[ $(bspc config -d focused window_gap) -ge 14 ]] && \
    bspc config -d focused window_gap $(($(bspc config -d focused window_gap)-10))

# toggle on/off picom
super + alt + o
    ~/.scripts/picom-toggle.sh

# set random wallpaper
super + alt + a
    ~/.scripts/rand-wallpaper.sh

# rofi change background prompt
super + shift + s
    ~/.scripts/change-wallpaper.sh

# rofi bookmarks prompt
super + shift + b
    ~/.scripts/bookmarks/bookmarks.py

# add new bookmark
super + shift + v
    $TERMINAL -e ~/.scripts/bookmarks/add_bookmark.py

# toggle dunst notification on and off
super + shift + d
    dunstctl set-paused toggle

# rofi emoji selector
super + shift + e
    rofi -no-default-config -show emoji -modi emoji

# rofi window switcher
alt + Tab
    rofi -no-default-config -show window

# program launcher
super + @space
    rofi -no-default-config -show drun -modi drun,run

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

# lock screen
super + x
    i3lock -i ~/Pictures/wallpapers/wall_48.png

#
# screenshot
#

# save entire screen
@Print
    scrot '%F_%T_$wx$h.png' -e 'mv $f ~/Pictures/ss/' && notify-send "Screenshot captured!" "Saved to directory."

# copy to clipboard entire screen
ctrl + @Print
    scrot '/tmp/%F_%T_$wx$h.png' -e 'xclip -selection clipboard -target image/png -i $f' && notify-send "Screenshot captured!" "Copied to clipboard."

# save selected area
shift + @Print
    scrot -s '%F_%T_$wx$h.png' -e 'mv $f ~/Pictures/ss/' && notify-send "Snip captured!" "Saved to directory."

# copy to clipboard selected area
ctrl + shift + @Print
    scrot -s '/tmp/%F_%T_$wx$h.png' -e 'xclip -selection clipboard -target image/png -i $f' && notify-send "Snip captured!" "Copied to clipboard."

# save window capture
alt + @Print
    scrot -u '%F_%T_$wx$h.png' -e 'mv $f ~/Pictures/ss/' && notify-send "Window captured!" "Saved to directory."

# copy to clipboard window capture
ctrl + alt + @Print
    scrot -u '/tmp/%F_%T_$wx$h.png' -e 'xclip -selection clipboard -target image/png -i $f' && notify-send "Window captured!" "Copied to clipboard."

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
    {~/.scripts/powermenu/logout.sh,bspc wm -r}

# powermenu
super + alt + p
    ~/.scripts/powermenu/powermenu.sh

# close and kill
super + {_,shift + }w
    bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
    bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
    bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
    bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
    bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
    bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
    bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
    bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

#
# volume controls
#

# Raise/Lower Volume
XF86Audio{Raise,Lower}Volume
    amixer sset Master {5%+, 5%-}

# Mute Volume
XF86AudioMute
    amixer set Master toggle

#
# brightness controls
#

# Raise/Lower Brightness
XF86MonBrightness{Down,Up}
    brightnessctl set {10%-,10%+}

#
# player controls
#

# Player Controls
XF86Audio{Play,Prev,Next,Stop}
    playerctl {play-pause,previous,next,stop}
